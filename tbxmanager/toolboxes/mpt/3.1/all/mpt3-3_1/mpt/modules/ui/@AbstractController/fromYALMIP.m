		function obj = fromYALMIP(obj, Y)
%
%  FROMYALMIP: Converts a custom YALMIP setup to a controller 
%  ===========================================================
%  
%  
%  SYNTAX
%  ------
%     
%      controller.fromYALMIP(yalmipdata)
%    
%  
%  DESCRIPTION
%  -----------
%     This function convers a custom YALMIP optimization problem to an MPT3
%  controller object.
%  
%  INPUT
%  -----
%     
%        
%          yalmipdata Structure generated by toYALMIP          
%                     Class: struct                            
%                       
%  
%  
%  SEE ALSO
%  --------
%     toYALMIP
%  

%  AUTHOR(s)
%  ---------
%     
%    
%   (c) 2003-2013  Michal Kvasnica: STU Bratislava
%   mailto:michal.kvasnica@stuba.sk 
%  
%  

%  LICENSE
%  -------
%    
%    This program is free software; you can redistribute it and/or modify it under
%  the terms of the GNU General Public License as published by the Free Software
%  Foundation; either version 2.1 of the License, or (at your option) any later
%  version.
%    This program is distributed in the hope that it will be useful, but WITHOUT
%  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
%  FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
%    You should have received a copy of the GNU General Public License along with
%  this library; if not, write to the  Free Software Foundation, Inc.,  59 Temple
%  Place, Suite 330,  Boston, MA 02111-1307 USA
%  -------------------------------------------------------------------------------
%    
%      This document was translated from LaTeX by HeVeA (1).
%  ---------------------------------------
%    
%    
%   (1) http://hevea.inria.fr/index.html
 
 
			% Import a YALMIP representation of constraints and objective
			%
			% NOTE: derived classes which implement control algorithms that
			% do not have a straightforward YALMIP implementation should
			% re-implement this method to throw an error
			if ~isstruct(Y) || ~isfield(Y, 'constraints') || ...
					~isfield(Y, 'objective') || ...
					~isfield(Y, 'variables') || ...
					~isfield(Y, 'internal')
				error('Input must be a structure generated by toYALMIP.');
			end
			% update the objective
			Y.internal.requested(1) = Y.objective;
			
			obj.xinitFormat = Y.internal.xinitFormat;
			obj.yalmipData = Y;
			obj.construct();
		end
